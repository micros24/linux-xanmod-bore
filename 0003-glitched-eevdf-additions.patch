diff -Naur vlinux-6.6.1/kernel/sched/fair.c linux-6.6.1/kernel/sched/fair.c
--- vlinux-6.6.1/kernel/sched/fair.c	2023-11-08 11:56:25.000000000 +0100
+++ linux-6.6.1/kernel/sched/fair.c	2023-11-11 15:51:09.630279108 +0100
@@ -90,11 +90,11 @@
 static unsigned int configured_sched_base_slice = 1000000000ULL / HZ;
 unsigned int        sysctl_sched_min_base_slice =    2000000ULL;
 #else // !CONFIG_SCHED_BORE
-unsigned int sysctl_sched_base_slice			= 750000ULL;
-static unsigned int normalized_sysctl_sched_base_slice	= 750000ULL;
+unsigned int sysctl_sched_base_slice			= 400000ULL;
+static unsigned int normalized_sysctl_sched_base_slice	= 400000ULL;
 #endif // CONFIG_SCHED_BORE
 
-const_debug unsigned int sysctl_sched_migration_cost	= 500000UL;
+const_debug unsigned int sysctl_sched_migration_cost	= 250000UL;
 
 #ifdef CONFIG_SCHED_BORE
 u8   __read_mostly sched_bore                   = 1;
@@ -239,7 +247,7 @@
  *
  * (default: 5 msec, units: microseconds)
  */
-static unsigned int sysctl_sched_cfs_bandwidth_slice		= 5000UL;
+static unsigned int sysctl_sched_cfs_bandwidth_slice		= 3000UL;
 #endif
 
 #ifdef CONFIG_NUMA_BALANCING
diff -Naur vlinux-6.6.1/kernel/sched/topology.c linux-6.6.1/kernel/sched/topology.c
--- vlinux-6.6.1/kernel/sched/topology.c	2023-11-08 11:56:25.000000000 +0100
+++ linux-6.6.1/kernel/sched/topology.c	2023-11-11 15:56:54.602473894 +0100
@@ -208,7 +208,7 @@
 
 #if defined(CONFIG_ENERGY_MODEL) && defined(CONFIG_CPU_FREQ_GOV_SCHEDUTIL)
 DEFINE_STATIC_KEY_FALSE(sched_energy_present);
-static unsigned int sysctl_sched_energy_aware = 1;
+static unsigned int sysctl_sched_energy_aware = 0;
 static DEFINE_MUTEX(sched_energy_mutex);
 static bool sched_energy_update;
 
diff -Naur vlinux-6.6.1/mm/page-writeback.c linux-6.6.1/mm/page-writeback.c
--- vlinux-6.6.1/mm/page-writeback.c	2023-11-08 11:56:25.000000000 +0100
+++ linux-6.6.1/mm/page-writeback.c	2023-11-11 16:07:22.214222902 +0100
@@ -71,7 +71,7 @@
 /*
  * Start background writeback (via writeback threads) at this percentage
  */
-static int dirty_background_ratio = 10;
+static int dirty_background_ratio = 20;
 
 /*
  * dirty_background_bytes starts at 0 (disabled) so that it is a function of
@@ -88,7 +92,7 @@
 /*
  * The generator of dirty data starts writeback at this percentage
  */
-static int vm_dirty_ratio = 20;
+static int vm_dirty_ratio = 50;
 
 /*
  * vm_dirty_bytes starts at 0 (disabled) so that it is a function of
